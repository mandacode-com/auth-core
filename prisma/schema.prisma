generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  binaryTargets   = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "user", "public", "temp_user"]
}

model AuthAccount {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  loginId   String   @unique @map("login_id") @db.VarChar(256)
  password  String   @db.VarChar(256)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("auth_account")
  @@schema("auth")
}

model OAuthAccount {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  provider   Provider
  providerId String   @map("provider_id") @db.VarChar(256)

  @@map("oauth_account")
  @@schema("auth")
}

model User {
  id            Int            @id @default(autoincrement())
  uuid          String         @unique @db.Uuid
  email         String?        @unique @db.VarChar(256)
  role          UserRole       @default(USER)
  authAccount   AuthAccount?
  oauthAccounts OAuthAccount[]
  profile       Profile?

  @@map("user")
  @@schema("user")
}

model Profile {
  id           Int      @id @default(autoincrement())
  nickname     String   @unique @db.VarChar(32)
  profileImage String?  @map("profile_image") @db.VarChar(256)
  joinDate     DateTime @default(now()) @map("join_date") @db.Timestamptz(6)
  updateDate   DateTime @updatedAt @map("update_date") @db.Timestamptz(6)
  userId       Int      @unique @map("user_id")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profile")
  @@schema("user")
}

model TempUser {
  id                    BigInt   @id @default(autoincrement())
  email                 String   @unique @db.VarChar(256)
  nickname              String   @db.VarChar(32)
  loginId               String   @unique @map("login_id") @db.VarChar(256)
  password              String   @db.VarChar(256)
  createDate            DateTime @default(now()) @map("create_date") @db.Timestamptz(6)
  updateDate            DateTime @updatedAt @map("update_date") @db.Timestamptz(6)
  expiryDate            DateTime @default(dbgenerated("now() + interval '1 day'")) @map("expiry_date") @db.Timestamptz(6)
  emailVerificationCode String   @map("email_verification_code") @db.Char(16)
  resendCount           Int      @default(0) @map("resend_count")

  @@map("temp_user")
  @@schema("temp_user")
}

enum Provider {
  GOOGLE   @map("google")
  NAVER    @map("naver")
  KAKAO    @map("kakao")
  APPLE    @map("apple")
  FACEBOOK @map("facebook")
  GITHUB   @map("github")

  @@map("provider_type")
  @@schema("public")
}

enum UserRole {
  SUPER @map("super")
  ADMIN @map("admin")
  USER  @map("user")
  GUEST @map("guest")

  @@map("role")
  @@schema("public")
}
